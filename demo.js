// Generated by CoffeeScript 1.4.0
(function() {
  var onReady,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  onReady = function() {
    var MyEntity, gameInstance, myGame;
    document.removeEventListener('DOMContentLoaded', onReady, false);
    MyEntity = (function(_super) {

      __extends(MyEntity, _super);

      function MyEntity() {
        this.update = __bind(this.update, this);
        MyEntity.__super__.constructor.apply(this, arguments);
        this.dir = {
          x: ~~(Math.random() * 2) ? 1 : -1,
          y: ~~(Math.random() * 2) ? 1 : -1
        };
      }

      MyEntity.prototype.update = function() {
        MyEntity.__super__.update.apply(this, arguments);
        if (this.dir.x === 1) {
          if (this.pos.x + this.size.x < this.game.currentLevel.pxSize.x) {
            this.pos.x += 2;
          } else {
            this.dir.x = -1;
          }
        } else {
          if (this.pos.x > 0) {
            this.pos.x -= 2;
          } else {
            this.dir.x = 1;
          }
        }
        if (this.dir.y === 1) {
          if (this.pos.y + this.size.y < this.game.currentLevel.pxSize.y) {
            return this.pos.y += 2;
          } else {
            return this.dir.y = -1;
          }
        } else {
          if (this.pos.y > 0) {
            return this.pos.y -= 2;
          } else {
            return this.dir.y = 1;
          }
        }
      };

      return MyEntity;

    })(c.Entity);
    myGame = (function(_super) {

      __extends(myGame, _super);

      function myGame() {
        var i, someLevel, _i;
        myGame.__super__.constructor.apply(this, arguments);
        someLevel = new c.Level(this);
        this.loadLevel(someLevel);
        for (i = _i = 0; _i <= 1500; i = ++_i) {
          new MyEntity(this, {
            pos: {
              x: ~~(Math.random() * 590),
              y: ~~(Math.random() * 270)
            },
            size: {
              x: 50,
              y: 50
            }
          });
        }
      }

      return myGame;

    })(c.Game);
    return gameInstance = new myGame({
      debug: true,
      resources: {
        stuff: 'things'
      }
    });
  };

  document.addEventListener('DOMContentLoaded', onReady, false);

}).call(this);
